spring.profiles.active=dev

spring.application.name=sec_kill


# 数据源配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.filters=stat
#spring.datasource.maxActive=1000
#spring.datasource.initialSize=100
#spring.datasource.maxWait=60000
#spring.datasource.minIdle=500
#spring.datasource.timeBetweenEvictionRunsMillis=60000
#spring.datasource.minEvictableIdleTimeMillis=300000
#spring.datasource.validationQuery=select 'x'
#spring.datasource.testWhileIdle=true
#spring.datasource.testOnBorrow=false
#spring.datasource.testOnReturn=false
#spring.datasource.poolPreparedStatements=true
#spring.datasource.maxOpenPreparedStatements=20

# mybatis 映射文件位置
mybatis.mapper-locations=classpath:mapping/*.xml
# 配置mybatis自动扫描 resultType 对应的包就不需要写全类名了
mybatis.type-aliases-package=com.deltaqin.seckill.dataobject
# 驼峰，但是不配置也可以自动转换，探究一下是不是自动配置了
mybatis.configuration.map-underscore-to-camel-case=true

# 设置redis
# 连接超时时间
spring.redis.timeout=10000

# 设置lettuce连接池
## 最大连接数
#spring.redis.lettuce.pool.max-active=100
## 默认是-1，负数无限等待，最大阻塞等待时间，5s
#spring.redis.lettuce.pool.max-wait=5000
#spring.redis.lettuce.pool.min-idle=8
#spring.redis.lettuce.pool.max-idle=500


#设置jedis连接池
# 不是自动配置，是给配置类读取的
jedis.pool.config.maxTotal=1000
jedis.pool.config.maxIdle=1000
jedis.pool.config.maxWaitMillis=100000



# 处理 没有找到对应的访问路径，也就是没有对应的Handler
# By default when the DispatcherServlet can't find a handler for a request it sends a 404 response.
# However if its property "throwExceptionIfNoHandlerFound" is set to true
# this exception is raised and may be handled with a configured HandlerExceptionResolver.
spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false

#static
#spring.resources.cache-period= 3600
spring.resources.chain.cache=true 
spring.resources.chain.enabled=true
spring.resources.chain.html-application-cache=true
spring.resources.static-locations=classpath:/static/
