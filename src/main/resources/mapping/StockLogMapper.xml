<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deltaqin.seckill.dao.StockLogMapper">
  <resultMap id="BaseResultMap" type="com.deltaqin.seckill.dataobject.StockLog">
    <id column="stock_log_id" jdbcType="INTEGER" property="stockLogId" />
    <result column="item_id" jdbcType="INTEGER" property="itemId" />
    <result column="item_stock_count" jdbcType="INTEGER" property="itemStockCount" />
    <result column="item_status" jdbcType="SMALLINT" property="itemStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    stock_log_id, item_id, item_stock_count, item_status
  </sql>
  <select id="selectByExample" parameterType="com.deltaqin.seckill.dataobject.StockLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stock_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stock_log
    where stock_log_id = #{stockLogId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from stock_log
    where stock_log_id = #{stockLogId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.deltaqin.seckill.dataobject.StockLogExample">
    delete from stock_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.deltaqin.seckill.dataobject.StockLog">
    insert into stock_log (stock_log_id, item_id, item_stock_count, 
      item_status)
    values (#{stockLogId,jdbcType=INTEGER}, #{itemId,jdbcType=INTEGER}, #{itemStockCount,jdbcType=INTEGER}, 
      #{itemStatus,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="com.deltaqin.seckill.dataobject.StockLog">
    insert into stock_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stockLogId != null">
        stock_log_id,
      </if>
      <if test="itemId != null">
        item_id,
      </if>
      <if test="itemStockCount != null">
        item_stock_count,
      </if>
      <if test="itemStatus != null">
        item_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stockLogId != null">
        #{stockLogId,jdbcType=INTEGER},
      </if>
      <if test="itemId != null">
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="itemStockCount != null">
        #{itemStockCount,jdbcType=INTEGER},
      </if>
      <if test="itemStatus != null">
        #{itemStatus,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.deltaqin.seckill.dataobject.StockLogExample" resultType="java.lang.Long">
    select count(*) from stock_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update stock_log
    <set>
      <if test="record.stockLogId != null">
        stock_log_id = #{record.stockLogId,jdbcType=INTEGER},
      </if>
      <if test="record.itemId != null">
        item_id = #{record.itemId,jdbcType=INTEGER},
      </if>
      <if test="record.itemStockCount != null">
        item_stock_count = #{record.itemStockCount,jdbcType=INTEGER},
      </if>
      <if test="record.itemStatus != null">
        item_status = #{record.itemStatus,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update stock_log
    set stock_log_id = #{record.stockLogId,jdbcType=INTEGER},
      item_id = #{record.itemId,jdbcType=INTEGER},
      item_stock_count = #{record.itemStockCount,jdbcType=INTEGER},
      item_status = #{record.itemStatus,jdbcType=SMALLINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.deltaqin.seckill.dataobject.StockLog">
    update stock_log
    <set>
      <if test="itemId != null">
        item_id = #{itemId,jdbcType=INTEGER},
      </if>
      <if test="itemStockCount != null">
        item_stock_count = #{itemStockCount,jdbcType=INTEGER},
      </if>
      <if test="itemStatus != null">
        item_status = #{itemStatus,jdbcType=SMALLINT},
      </if>
    </set>
    where stock_log_id = #{stockLogId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deltaqin.seckill.dataobject.StockLog">
    update stock_log
    set item_id = #{itemId,jdbcType=INTEGER},
      item_stock_count = #{itemStockCount,jdbcType=INTEGER},
      item_status = #{itemStatus,jdbcType=SMALLINT}
    where stock_log_id = #{stockLogId,jdbcType=INTEGER}
  </update>
</mapper>